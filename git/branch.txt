        3. Работа с ветками
1. Для чего нужны ветки
2.1. Изменение названия ветки по умолчанию.

2.2. Создание новой ветки
  git branch <name>

удаление ветки
  git branch --delete <name>
  git branch -d <name>
Принудительное удаление ветки(с изменениями)
  git branch --delete --force <name>
  git branch -d -f <name>
  git branch -D <name>

  создание и переключение на новую ветку
    git checkout -b <name>
    git switch --create <name>
    git switch -c <name>

2.3. Переключение между ветками
  git switch <name>
  git checkout <name>

  переключение на предыдущую ветку
  git switch <->

2.4. Просмотр существующих веток
  git branch
  git branch -v

    Просмотр и локальных и удалённых(отдалённых) веток
    git branch --all
    git branch -a

    Просмотр локальных веток
    git branch -l
    git branch --list
    с указанием шаблона(если веток много и есть с одинаковыми составляющими имени)
    git branch -l "name-*" будут выведены ветки, имя которых начинается name-

    Для просмотра всех удалённых(отдалённых, не локальных) веток
    git branch -r
    git branch --remotes

2.5. Переименование ветки
  git branch -m <name> <new name>

  если нужно переименовать ветку в которой ноходитесь
  git branch -m

2.6. Переключение на удалённую ветку
  git checkout <name>
  git switch --detach <name>


5.3. Отправление ветки в удалённый репозитарий
  Чтобы отправить ветку в удалённый репозитарий в первый репозитарий
  git push --set-upstream origin <name>
  короткий вариант
  git push -u origin <name>

  отправка изменений в удалённый репозитарий
  git push origin <name>
  если находимся в той-же ветке изменнения которой отправляем
  git push
