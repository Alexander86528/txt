branch - ветка
origin - источник 
remote-удалённый, дистанционный;
commit - совершить, фиксировать.
checkout - проверка, отладка, контроль
feature(фича) - особенность, свойство, характеристика
modified - изменённый.
log - журнал
show - показать;
staged - поэтапное
changes - изменения
local storage-локальное хранилище
issue - вопрос, проблема
tracked - отслеживаемые
untracked - неотслеживаемые
ours - наш
theirs - их


    КОНФИГУРАЦИЯ GIT
git config --global user.name <name>
git config --global user.email <email>
git config --global core.editor <editor>
  Конфигурация для всех проектов. <editor> - лучше посмотреть в книге.

git config --global -- init.defaultBranch <name>
  <name> - имя главной ветки(main, master).

git config user.name <name>
git config user.email <email>
git config core.editor <editor>
  Конфигурация для конкретного каталога. <editor> - лучше посмотреть в книге.
git config -- init.defaultBranch <name>
  <name> - имя главной ветки(main, master).

/*
git config --global user.name Alexander86528
git config --global user.email dl800259@gmail.com
git config --global core.editor "gedit --wait --new-window"
 
git config --global user.name Auma30
git config --global user.email almubuntu5@gmail.com
git config --global core.editor "nano -w"
*/

    GIT CONFIG
git config --list
  Показывает настройки по умолчанию.
git config --list --show-origin
  Показывает какие настройки гит и вкаких файлах они находятся.

    GITIGNORE
.gitignore

.directory

git status
  Просматривает состояние файлов.
git add .
git add -A
  Добавляет в индекс все файлы.
git add <name file>
  Добавляет в индекс <name file>.

git restore <name file>
  Отмена изменений в файле до индексации.
git restore --staged <name file>
  Отмена индексации файла.

    GIT COMMIT
git commit -m "comment"
git commit -a
  Индексация и коммит.
git commit --amend
  Редактирование коммита. Сначала вносятся изменения, индексируется,
  затем команда commit c --amend. Новый коммит будет принят вместо
  предыдущего.

    GIT DIFF (difference-разница)
git diff
  Просмотр изменений перед индексацией;
git diff --staged
  Просмотр изменений после индексации;
git diff --check
  Просмотр ненужных пробелов

    Удаление/Переименование/Перемещение
git rm <file>
  Удаление файла.
git mv <name file> <new name file>
  Переименование файла.
git mv old/file new/file
  Перемещение из одной папки в другую.

    git log
git log <-n>
  Просмотр истории коммитов.
  <-n> - заданное количество коммитов назад.



    "Буфер обмена"
stash - припрятать;
apply - применять;
git stash;
git stash apply - вставить из буфера;

Показать историю commit.
git log -p <число>;
gti log --oneline
git show <хеш>.

git checkout <file> "возврат изменений".

nothing to commit, working tree clean - ничего не нужно предпринимать, рабочее дерево чистое.
Your branch is up to date with 'origin/master'-в вашей ветке обновлено значение origin / master.

получение изменений с гитхаба
1) git fetch origin

Удаление ветки на гитхабе после того как удалена локально.
git push origin --delete <name branch>
git push origin :<name branch>

удаление метки после слияния веток(после удалений осталась локально метка)
git fetch --prune

    3. ВЕТВЛЕНИЕ
просмотр веток
  git branch
просмотр ветки и инфа о коммите
  git branch -v
создание новой ветки
  git branch <name>
переключиться на новую ветку
  git switch <name>
  git checkout <name>
создать ветку и сразу переключиться на неё
  git checkout -b <name>

git merge <name>
  Вливание одной ветки в другую.
git branch --move <name> <new name>
git branch -m <name>
  Переименование ветки.

git branch -d <name branch>
  удаление ветки локально после слияния

git rebase <name>























