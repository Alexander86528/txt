branch - ветка
origin - источник 
remote-удалённый, дистанционный;
commit - совершить, фиксировать.
checkout - проверка, отладка, контроль
feature(фича) - особенность, свойство, характеристика
modified - изменённый.
log - журнал
show - показать;
staged - поэтапное
changes - изменения
local storage-локальное хранилище
issue - вопрос, проблема

    КОНФИГУРАЦИЯ GIT
git config --global user.name Alexander86528
git config --global user.email dl800259@gmail.com
git config --global core.editor "gedit --wait --new-window"
 
git config --global user.name Auma30
git config --global user.email almubuntu5@gmail.com
git config --global core.editor "nano -w"

git config --list --show-origin

    GITIGNORE
.gitignore
.directory

    GIT CONFIG
git config --list
git config --list --show-origin

    GIT COMMIT
git commit -m "comment"

    GIT DIFF (difference-разница)
git diff - перед индексацией;
git diff --staged - после индексации;
Просмотр ненужных пробелов
git diff --check

    "Буфер обмена"
stash - припрятать;
apply - применять;
git stash;
git stash apply - вставить из буфера;

Показать историю commit.
git log -p <число>;
gti log --oneline
git show <хеш>.

git checkout <file> "возврат изменений".

nothing to commit, working tree clean - ничего не нужно предпринимать, рабочее дерево чистое.
Your branch is up to date with 'origin/master'-в вашей ветке обновлено значение origin / master.

получение изменений с гитхаба
1) git fetch origin

удаление ветки локально после слияния
git branch -d <name branch>
Удаление ветки на гитхабе после того как удалена локально.
git push origin --delete <name branch>
git push origin :<name branch>

удаление метки после слияния веток(после удалений осталась локально метка)
git fetch --prune

    3. ВЕТВЛЕНИЕ
просмотр веток
  git branch
просмотр ветки и инфа о коммите
  git branch -v
создание новой ветки
  git branch <name>
переключиться на новую ветку
  git checkout <name>
создать ветку и сразу переключиться на неё
  git checkout -b <name>























